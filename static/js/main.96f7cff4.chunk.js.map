{"version":3,"sources":["GlobalComponents/Notification/index.js","GlobalComponents/Notification/NotificationContext.js","Context/BinaryTreeContext.js","Reducers/BookReducer.js","Context/BookContext.js","GlobalComponents/PrimaryButton/index.js","GlobalComponents/DisplayPanel/index.js","GlobalComponents/BinaryTree/index.js","GlobalComponents/ScrollableText/index.js","Components/AVLTreePanel/AVLTreeNode.js","GlobalComponents/CheckBox/index.js","Utils/AnimateModal.js","GlobalComponents/PrimaryModal/index.js","GlobalComponents/SecondaryModal/index.js","GlobalComponents/Spinner/index.js","Components/AVLTreePanel/ChoosePropertyModal.js","Components/AVLTreePanel/BookTable.js","GlobalComponents/TextInput/index.js","Components/AVLTreePanel/EditBookModal.js","Components/AVLTreePanel/BookEditorModal.js","GlobalComponents/LogModal/index.js","Components/AVLTreePanel/AVLTreeLogModal.js","Components/AVLTreePanel/index.js","Components/BinaryTreePanel/BinaryTreeNode.js","GlobalComponents/Icons/Arrows.js","GlobalComponents/NumberInput/index.js","Components/BinaryTreePanel/ChooseNodeModal.js","Components/BinaryTreePanel/BinaryTreeLogModal.js","Components/BinaryTreePanel/index.js","App.js","serviceWorker.js","index.js"],"names":["Notification","NotificationOptions","onClose","Notif","React","useRef","useState","SlideOut","setSlideOut","useEffect","current","CurrentNotif","style","height","scrollHeight","timeout","setProperty","onanimationend","e","animationName","id","clearTimeout","ref","className","onClick","type","title","body","NotificationList","Notifications","map","notification","key","NotificationContext","createContext","NotifIndex","NotificationProvider","children","setNotifications","PushNotification","useCallback","NewNotif","OldNotifs","RemoveNotification","length","filter","notif","Provider","value","UseNotificationContext","useContext","BinaryTreeDataContext","BinaryTreeFunctionContext","BinaryTreeProvider","AVLTreeData","setAVLTreeData","BinaryTreeData","setBinaryTreeData","AVLTreeLogs","setAVLTreeLogs","BinaryTreeLogs","setBinaryTreeLogs","UseBinaryTreeDataContext","UseBinaryTreeFunctionContext","BooksReducer","Books","Action","payload","Book","console","log","BookDataContext","BookFunctionContext","BookProvider","useReducer","BooksReducerDispatch","UseBooksReducer","setBooks","UseBookFunctionContext","PrimaryButton","DisplayPanel","Buttons","Button","b","action","text","BinaryTree","TreeData","keyProperty","DisplayText","TreeNode","Size","Separation","siblings","nonSiblings","TreeWrapper","x","y","Translate","setTranslate","getBoundingClientRect","width","treeHeight","querySelector","data","orientation","collapsible","translate","zoom","separation","nodeSvgShape","shape","styles","links","strokeWidth","allowForeignObjects","nodeLabelComponent","render","foreignObjectWrapper","overflow","ScrollableText","props","Text","Observer","ReRender","setReRender","offsetWidth","scrollWidth","Scrollable","Amount","offset","onmouseover","Indent","parseFloat","getComputedStyle","textIndent","animation","timeStretch","Math","abs","onmouseout","enabled","ResizeObserver","OldValue","observe","parentNode","disconnect","Properties","displayName","AVLTreeNode","nodeData","TimeoutRef","ShowToolTip","setShowToolTip","PropertyValue","attributes","Edge","document","classList","add","onMouseOver","setTimeout","onMouseLeave","OldShowValue","Property","p","CheckBox","radio","defaultChecked","label","onChange","size","fontSize","Input","checked","name","AnimateModal","el","cb","PrimaryModal","Overlay","Modal","CloseModal","persist","CloseCallback","PassCloseEvent","ModalOptions","HeaderTitle","LeftTitle","LeftAction","RightTitle","RightAction","SecondaryModal","Spinner","Loading","viewBox","fill","cx","cy","r","GENERATE_TREE","gql","ChoosePropertyModal","setSelected","setLoading","ShowSpinner","setShowSpinner","Callback","setCallback","SelectedProperty","setSelectedProperty","useLazyQuery","fetchPolicy","onCompleted","GenerateAVLTreeQueryData","GenerateAVLTree","onError","variables","comparator","DELETE_BOOK","BookTable","setSelectedBook","useMutation","errorPolicy","DeleteBookMutationData","DeleteBook","maxHeight","ISBN","maxWidth","author","marginTop","TextInput","UPDATE_BOOK","CREATE_BOOK","EditBookModal","setISBN","Title","setTitle","Author","setAuthor","CreateBookData","CreateBook","UpdateBookData","UpdateBook","trim","target","GET_BOOKS","DELETE_ALL_BOOKS","LOAD_BOOKS_FROM_TEXT","BookEditorModal","SelectedBook","GetBooksQueryData","GetBooks","DeleteAllBooks","LoadBooksFromText","minWidth","append","accept","File","files","window","FileReader","Reader","onload","event","result","readAsText","LogModal","Logs","Log","l","GET_LOGS","AVLTreeLogModal","GetTreeLogsQueryData","GetAVLTreeLogs","GetTreeLogs","AVLTreePanel","ShowPropertyModal","setShowPropertyModal","ShowBookEditor","setShowBookEditor","ShowLogModal","setShowLogModal","BinaryTreeNode","DownArrow","color","strokeColor","xmlns","d","stroke","Arrows","TopAction","BottomAction","transform","top","bottom","NumberInput","min","max","step","position","ChooseNodeModal","Nodes","setNodes","GenerateBinaryTreeQueryData","GenerateBinaryTree","nodes","BinaryLogModal","GetBinaryTreeLogs","BinaryTreePanel","ShowNodeModal","setShowNodeModal","App","Active","setActive","marginRight","Boolean","location","hostname","match","URI","protocol","indexOf","Client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","StrictMode","client","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.96f7cff4.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport \"./Notification.scss\";\r\n\r\nfunction Notification({NotificationOptions, onClose}) {\r\n  const Notif = React.useRef(null);\r\n  const [SlideOut, setSlideOut] = React.useState(false);\r\n  \r\n  React.useEffect(() => {\r\n    if(!Notif.current) return;\r\n    const CurrentNotif = Notif.current;\r\n\r\n    CurrentNotif.style.height = `${CurrentNotif.scrollHeight}px`;\r\n    \r\n    NotificationOptions.timeout && \r\n      CurrentNotif.style.setProperty(\"--Notif-Progress-Animation\", \r\n        `Notif-Progress ${NotificationOptions.timeout/1000}s`);\r\n\r\n    CurrentNotif.onanimationend = (e) => {\r\n      if(e.animationName === \"Notif-ScaleOut\") onClose(NotificationOptions.id);\r\n      else if(e.animationName === \"Notif-Progress\") setSlideOut(true);\r\n    };\r\n\r\n    return () => {\r\n      clearTimeout(CurrentNotif);\r\n      CurrentNotif.onanimationend = null;\r\n    }\r\n  }, [Notif, NotificationOptions, onClose, setSlideOut]);\r\n\r\n  return (\r\n    <div ref={Notif} className={`NotificationWrapper ${SlideOut ? \"NotificationSlideOut\" : \"\"}`}>\r\n      <div className=\"Notification\" onClick={() => setSlideOut(true)}>\r\n          <b>{NotificationOptions.type || \"Error\"}</b> | {NotificationOptions.title}\r\n          {NotificationOptions.body && <p>{NotificationOptions.body}</p>}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction NotificationList({Notifications, onClose}) {\r\n  return (\r\n    <div className=\"NotificationList\">\r\n      {Notifications.map((notification) => \r\n        <Notification key={notification.id} NotificationOptions={notification} onClose={onClose}/>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotificationList;\r\n","import React from \"react\";\r\n\r\nimport NotificationList from \".\";\r\n\r\nconst NotificationContext = React.createContext(); \r\n\r\nlet NotifIndex = 0;\r\n\r\nexport function NotificationProvider({children}) {\r\n  const [Notifications, setNotifications] = React.useState([]);\r\n\r\n  const PushNotification = React.useCallback((NewNotif) => {\r\n    NewNotif.id = NotifIndex++;\r\n    setNotifications((OldNotifs) => [...OldNotifs, NewNotif])\r\n  }, [setNotifications]);\r\n\r\n  const RemoveNotification = React.useCallback((id) =>\r\n    setNotifications((OldNotifs) => {\r\n      OldNotifs.length <= 1 && (NotifIndex = 0);\r\n      return OldNotifs.filter((notif) => notif.id !== id);\r\n    }\r\n  ), [setNotifications]);    \r\n\r\n  return (\r\n    <NotificationContext.Provider value={PushNotification}>\r\n      {children}\r\n      {Notifications.length > 0 ? <NotificationList Notifications={Notifications} onClose={RemoveNotification}/> : <></>}\r\n    </NotificationContext.Provider>\r\n  );\r\n}\r\n\r\nexport const UseNotificationContext = () => React.useContext(NotificationContext);","import React from \"react\";\r\n\r\nconst BinaryTreeDataContext = React.createContext(); \r\nconst BinaryTreeFunctionContext = React.createContext(); \r\n\r\nexport function BinaryTreeProvider({children}) {\r\n  const [AVLTreeData, setAVLTreeData] = React.useState(null); \r\n  const [BinaryTreeData, setBinaryTreeData] = React.useState(null); \r\n  const [AVLTreeLogs, setAVLTreeLogs] = React.useState([]); \r\n  const [BinaryTreeLogs, setBinaryTreeLogs] = React.useState([]); \r\n\r\n  return (\r\n    <BinaryTreeFunctionContext.Provider value={{setAVLTreeData, setBinaryTreeData, setAVLTreeLogs, setBinaryTreeLogs}}>\r\n      <BinaryTreeDataContext.Provider value={{AVLTreeData, BinaryTreeData, AVLTreeLogs, BinaryTreeLogs}}>\r\n        {children}\r\n      </BinaryTreeDataContext.Provider>\r\n    </BinaryTreeFunctionContext.Provider>\r\n  );\r\n}\r\n\r\nexport const UseBinaryTreeDataContext = () => React.useContext(BinaryTreeDataContext);\r\nexport const UseBinaryTreeFunctionContext = () => React.useContext(BinaryTreeFunctionContext);","import React from \"react\";\r\n\r\nconst BooksReducer = (Books, Action) => {\r\n\tswitch(Action.type) {\r\n\t\tcase \"SET_BOOKS\":\r\n      return Action.payload;\r\n\t\tcase \"UPDATE_BOOK\":\r\n      return Books.map((Book) => Book.id === Action.payload.id ? Action.payload : Book);\r\n\t\tcase \"CREATE_BOOK\":\r\n      return [...Books, Action.payload];\r\n\t\tcase \"DELETE_BOOK\":\r\n      return Books.filter((Book) => Book.id !== Action.payload);\r\n\t\tcase \"DELETE_ALL_BOOKS\":\r\n      return [];\r\n\t\tdefault:\r\n\t\t\tconsole.log(\"ERROR\");\r\n\t\t\treturn Books;\r\n\t}\r\n}\r\n\r\nexport default function UseBooksReducer() {\r\n\tconst [Books, BooksReducerDispatch] = React.useReducer(BooksReducer, []);\r\n\r\n\tconst setBooks = React.useCallback((type, payload) => \r\n    BooksReducerDispatch({type, payload}), []);\r\n\r\n\treturn [Books, setBooks];\r\n}","import React from \"react\";\r\nimport UseBooksReducer from \"../Reducers/BookReducer\";\r\n\r\nconst BookDataContext = React.createContext(); \r\nconst BookFunctionContext = React.createContext(); \r\n\r\nexport function BookProvider({children}) {\r\n  const [Books, setBooks] = UseBooksReducer();\r\n\r\n  return (\r\n    <BookFunctionContext.Provider value={setBooks}>\r\n      <BookDataContext.Provider value={Books}>\r\n        {children}\r\n      </BookDataContext.Provider>\r\n    </BookFunctionContext.Provider>\r\n  );\r\n}\r\n\r\nexport const UseBookDataContext = () => React.useContext(BookDataContext);\r\nexport const UseBookFunctionContext = () => React.useContext(BookFunctionContext);","import React from \"react\";\r\n\r\nimport \"./PrimaryButton.scss\";\r\n\r\nfunction PrimaryButton({style, children, onClick}) {\r\n  return (\r\n    <button className=\"PrimaryButton\" style={style} onClick={onClick}>\r\n      {children}\r\n    </button>      \r\n  );\r\n}\r\n\r\nexport default PrimaryButton;\r\n","import React from \"react\";\r\n\r\nimport PrimaryButton from \"../PrimaryButton\";\r\n\r\nimport \"./DisplayPanel.scss\";\r\n\r\nfunction DisplayPanel({Buttons, className, children}) {\r\n  return (\r\n    <div className=\"DisplayPanel\">\r\n      <div className={`Display${className ? ` ${className}` : \"\"}`}>\r\n        {children}\r\n      </div>\r\n\r\n      {Buttons?.length &&\r\n        <div className=\"PanelButtonGroup\">\r\n          {Buttons.map((Button, b) => \r\n            <PrimaryButton key={b} onClick={Button.action}>{Button.text}</PrimaryButton>\r\n          )}\r\n        </div>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DisplayPanel;\r\n","import React from \"react\";\r\nimport Tree from \"react-d3-tree\";\r\n\r\nimport \"./BinaryTree.scss\";\r\n\r\nfunction BinaryTree({TreeData, keyProperty, DisplayText, TreeNode, Size = 175, Separation = {siblings: 1.45, nonSiblings: 1.45}}) {\r\n  const TreeWrapper = React.useRef(null);\r\n  const [Translate, setTranslate] = React.useState({x: 0, y: 0});\r\n\r\n  React.useEffect(() => {\r\n    if(!TreeWrapper.current) return;\r\n\r\n    let {width, height} = TreeWrapper.current.getBoundingClientRect();\r\n    let {height: treeHeight} = TreeWrapper.current.querySelector(\".rd3t-tree-container > svg > g\")?.getBoundingClientRect() || {};\r\n\r\n    setTranslate({x: width / 2, y: treeHeight && treeHeight <= height ? (height - treeHeight) / 2 : 15});\r\n  }, [TreeWrapper, setTranslate]);\r\n\r\n  return (\r\n    <>\r\n      {TreeData ? \r\n        <div ref={TreeWrapper} style={{width: \"100%\", height: \"100%\"}}>\r\n          <Tree\r\n            data={TreeData}\r\n            orientation=\"vertical\"\r\n            collapsible={false}\r\n            translate={Translate}\r\n            zoom={0.50}\r\n            separation={Separation}\r\n            nodeSvgShape={{shape: \"none\"}}\r\n            styles={{links: {strokeWidth: 4}}}\r\n            allowForeignObjects\r\n            nodeLabelComponent={{\r\n              render: <TreeNode keyProperty={keyProperty}/>,\r\n              foreignObjectWrapper: {\r\n                width: Size,\r\n                x: -Size/2, y: -20,\r\n                overflow: \"visible\"\r\n              }\r\n            }}\r\n          />\r\n        </div>\r\n      : <span>{DisplayText}</span>}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default BinaryTree;\r\n","import React from \"react\"; \r\n\r\nimport \"./ScrollableText.scss\";\r\n\r\nfunction ScrollableText(props) {\r\n  const Text = React.useRef(null);\r\n  const Observer = React.useRef(null);\r\n  const [ReRender, setReRender] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    if(Text.current.offsetWidth >= Text.current.scrollWidth) {Text.current.style.setProperty(\"--scroll-amount\", \"0px\"); return;}\r\n    \r\n    let Scrollable = Text.current;\r\n    let Amount = Scrollable.scrollWidth - Scrollable.offsetWidth;\r\n    \r\n    Scrollable.style.width = `${Scrollable.offsetWidth}px`;\r\n    Scrollable.style.setProperty(\"--scroll-amount\", `-${Amount}px - ${props.offset || \"0px\"}`);\r\n\r\n    Scrollable.onmouseover = () => {\r\n      let Indent = parseFloat(getComputedStyle(Scrollable).textIndent);\r\n\r\n      Scrollable.style.setProperty(\"--scroll-in-from\", `${Indent}px`);\r\n      Scrollable.style.animation = `Scroll-In ${(props.timeStretch || 2) * (Amount-Math.abs(Indent))/Amount}s ease-in-out forwards`;\r\n    };\r\n    Scrollable.onmouseout = () => {\r\n      let Indent = parseFloat(getComputedStyle(Scrollable).textIndent);\r\n\r\n      Scrollable.style.setProperty(\"--scroll-out-from\", `${Indent}px`);\r\n      Scrollable.style.animation = `Scroll-Out ${(props.timeStretch || 2) * Math.abs(Indent)/Amount}s ease-in-out`;\r\n    };\r\n\r\n    return () => {\r\n      Scrollable.onmouseover = null;\r\n      Scrollable.onmouseout = null;\r\n      Scrollable.style.width = null;\r\n    };\r\n  }, [Text, ReRender, props.timeStretch, props.enabled, props.offset, props.children]);\r\n\r\n  React.useEffect(() => {\r\n    Observer.current = new ResizeObserver(() => setReRender((OldValue) => !OldValue));\r\n    Observer.current.observe(Text.current.parentNode);\r\n\r\n    return () => Observer.current.disconnect();\r\n  }, [Text, Observer, setReRender]);\r\n\r\n  return (\r\n    <span className={props.className} ref={Text} style={props.style}>{props.children}</span>\r\n  );\r\n}\r\n\r\nexport default ScrollableText;","import React from \"react\";\r\n\r\nimport ScrollableText from \"../../GlobalComponents/ScrollableText\";\r\n\r\nconst Properties = [\r\n  {title: \"ISBN\", displayName: \"ISBN\"},\r\n  {title: \"title\", displayName: \"Title\"},\r\n  {title: \"author\", displayName: \"Author\"}\r\n]\r\n\r\nfunction AVLTreeNode({nodeData, keyProperty = \"ISBN\"}) {\r\n  const TimeoutRef = React.useRef(null)\r\n  const [ShowToolTip, setShowToolTip] = React.useState(null);\r\n  const PropertyValue = nodeData?.attributes ? nodeData.attributes[keyProperty] : null;\r\n\r\n  const onMouseEnter = () => {\r\n      TimeoutRef.current = setTimeout(() => {setShowToolTip(true)}, 1000);\r\n  }\r\n\r\n  const onMouseOut = () => {\r\n      clearTimeout(TimeoutRef.current);\r\n      TimeoutRef.current = null;\r\n      setShowToolTip((OldShowValue) => OldShowValue ? false : null);\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if(nodeData && !nodeData.attributes) {\r\n      let Edge = document.querySelector(`[data-target-id*=\"${nodeData.id}\"]`);\r\n\r\n      Edge && Edge.classList.add(\"EmptyTreeNode\");\r\n    } else return;\r\n  });\r\n\r\n  return (\r\n    <div className={`TreeNode ${!PropertyValue ? \"EmptyTreeNode\" : \"\"}`}>\r\n      <span \r\n        onMouseOver={PropertyValue ? onMouseEnter : null}\r\n        onMouseLeave={PropertyValue ? onMouseOut : null}\r\n      >\r\n        <ScrollableText timeStretch={0.95} offset=\"6px\">{PropertyValue}</ScrollableText>\r\n      </span>\r\n\r\n      \r\n      <div className=\"ToolTip\" style={{\r\n        animation: ShowToolTip ? \r\n        \"ToolTipScaleIn 0.3s ease-in-out forwards\" : null\r\n      }}>\r\n        {Properties.map((Property, p) => Property.title !== keyProperty ? \r\n          <span key={p}>\r\n            <b>{Property.displayName}: </b>{PropertyValue && nodeData.attributes[Property.title]}\r\n          </span> : null\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AVLTreeNode;\r\n","import React from \"react\";\r\n\r\nimport \"./CheckBox.scss\";\r\n\r\nfunction CheckBox({radio, defaultChecked, label, onChange, size = 40, fontSize}) {\r\n  const Input = React.useRef(null);\r\n\r\n  React.useEffect(() => {\r\n    Input.current.checked = defaultChecked;\r\n  }, [Input, defaultChecked]);\r\n\r\n  return (\r\n    <label className=\"CheckBox\">\r\n      <input ref={Input} type={radio ? \"radio\" : \"checkbox\"} name={radio} onChange={onChange}/>\r\n      <span className=\"CheckMark Input\" style={{width: `${size}px`, height: `${size}px`}}>\r\n        <span>x</span>\r\n      </span>\r\n      {label && <span className=\"CheckBoxLabel\" style={{fontSize}}>{label}</span>}\r\n    </label>\r\n  )\r\n}\r\n\r\nexport default CheckBox;\r\n","export default function AnimateModal(el, cb, className, animationName=className) {\r\n    if(el) {\r\n        el.classList.add(className);\r\n        el.onanimationend = (e) => {\r\n            e.animationName === animationName && cb();\r\n        };\r\n    }\r\n}","import React from \"react\";\r\nimport AnimateModal from \"../../Utils/AnimateModal\";\r\n\r\nimport PrimaryButton from \"../PrimaryButton\";\r\n\r\nimport \"./PrimaryModal.scss\";\r\n\r\nfunction PrimaryModal(props) {\r\n  const Overlay = React.useRef(null);\r\n  const Modal = React.useRef(null);\r\n\r\n  const CloseModal = (e, action) => {\r\n    if(!Overlay.current || !Modal.current) return;\r\n    e.persist();\r\n\r\n    const OverlayClose = () => {\r\n      typeof action === \"function\" && action();\r\n      AnimateModal(Overlay.current, () => props.CloseCallback(props.PassCloseEvent ? e : null), \"OverlayFadeOut\");\r\n    }\r\n\r\n    AnimateModal(Modal.current, OverlayClose, \"ModalFadeOut\");\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"Overlay\" ref={Overlay} \r\n        onClick={CloseModal}\r\n      ></div>\r\n      <div className=\"PrimaryModal\"  ref={Modal} style={props.style} {...props.ModalOptions}>\r\n        <h2 className=\"ModalHeader\">\r\n          {props.HeaderTitle || \"Header\"}\r\n          <span className=\"CloseButton\" onClick={CloseModal}>x</span>\r\n        </h2>\r\n\r\n        <div className=\"ModalContentContainer\">\r\n          <div className=\"ModalContent\">{props.children}</div>\r\n\r\n          {(props.LeftTitle || props.LeftAction || props.RightTitle || props.RightAction) &&                     \r\n            <div className=\"ModalButtonContainer\">\r\n              <PrimaryButton onClick={\r\n                props.LeftAction ? (e) => props.LeftAction((action) => CloseModal(e, action)) : null\r\n              }>\r\n                {props.LeftTitle || \"Cancel\"} \r\n              </PrimaryButton>\r\n              \r\n              <PrimaryButton onClick={\r\n                props.RightAction ? (e) => props.RightAction((action) => CloseModal(e, action)) : null\r\n              }>\r\n                {props.RightTitle || \"Save\"}\r\n              </PrimaryButton>\r\n            </div>\r\n          }\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PrimaryModal;\r\n","import React from \"react\"; \r\n\r\nimport PrimaryModal from \"../PrimaryModal\";\r\n\r\nimport \"./SecondaryModal.scss\"\r\n\r\nfunction SecondaryModal(props) {\r\n    return (\r\n        <PrimaryModal \r\n            HeaderTitle={props.HeaderTitle} CloseCallback={props.CloseCallback}\r\n            LeftTitle={props.LeftTitle || \"Cancel\"} \r\n            LeftAction={props.LeftAction ? (cb) => props.LeftAction(cb) : null}\r\n            RightAction={props.RightAction ? (cb) => props.RightAction(cb) : null}\r\n            RightTitle={props.RightTitle || \"Confirm\"}\r\n            ModalOptions={{className: `PrimaryModal SecondaryModal`, ...props.ModalOptions}}\r\n            style={props.style}\r\n        >\r\n            {props.children}\r\n        </PrimaryModal>\r\n    );\r\n}\r\n\r\nexport default SecondaryModal;","import React from \"react\";\r\nimport AnimateModal from \"../../Utils/AnimateModal\";\r\n\r\nimport \"./Spinner.scss\";\r\n\r\nfunction Spinner({Loading, CloseCallback}) {\r\n  const Overlay = React.useRef(null);\r\n\r\n  React.useEffect(() => {\r\n    if(!CloseCallback) return; \r\n\r\n    if(Loading === false)\r\n      AnimateModal(Overlay.current, () => CloseCallback(), \"OverlayFadeOut\")\r\n  }, [Overlay, Loading, CloseCallback]);\r\n\r\n  return (\r\n    <div ref={Overlay} className=\"Overlay SpinnerOverlay\">\r\n      <svg className=\"Spinner\" width={\"14rem\"} viewBox=\"0 0 50 50\" fill=\"none\">\r\n        <circle className=\"SpinnerStroke\" cx=\"25\" cy=\"25\" r=\"19.5\" strokeWidth={6 - 0.1}/>\r\n        <circle className=\"SpinnerPath\" cx=\"25\" cy=\"25\" r=\"19.5\" strokeWidth={6}/>\r\n      </svg>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Spinner;\r\n","import React from \"react\";\r\nimport {useLazyQuery, gql } from \"@apollo/client\";\r\nimport { UseBinaryTreeFunctionContext } from \"../../Context/BinaryTreeContext\";\r\nimport { UseNotificationContext } from \"../../GlobalComponents/Notification/NotificationContext\";\r\n\r\nimport CheckBox from \"../../GlobalComponents/CheckBox\";\r\nimport SecondaryModal from \"../../GlobalComponents/SecondaryModal\";\r\nimport Spinner from \"../../GlobalComponents/Spinner\";\r\n\r\nconst Properties = [\r\n  {title: \"ISBN\", displayName: \"ISBN\"},\r\n  {title: \"title\", displayName: \"Title\"},\r\n  {title: \"author\", displayName: \"Author\"}\r\n]\r\n\r\nconst GENERATE_TREE = gql`\r\n  fragment fields on AVLTreeDisplay {\r\n    name attributes {ISBN title author}\r\n  }\r\n\r\n  fragment recursiveFields on AVLTreeDisplay {\r\n    children {\r\n      ...fields\r\n      children {\r\n        ...fields\r\n        children {\r\n          ...fields \r\n          children {\r\n          ...fields\r\n            children {...fields}\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  query GenerateAVLTree($comparator: String) {\r\n    GenerateAVLTree(comparator: $comparator) {\r\n      ...fields ...recursiveFields \r\n    }\r\n  }\r\n`;\r\n\r\nfunction ChoosePropertyModal({setSelected, CloseCallback}) {\r\n  const [Loading, setLoading] = React.useState(false);\r\n  const [ShowSpinner, setShowSpinner] = React.useState(false);\r\n  const [Callback, setCallback] = React.useState(() => 0);\r\n  const [SelectedProperty, setSelectedProperty] = React.useState(Properties[0].title);\r\n  const {setAVLTreeData} = UseBinaryTreeFunctionContext();\r\n  const PushNotification = UseNotificationContext();\r\n\r\n  const Choose = (cb) => {\r\n    setLoading(true);\r\n    setCallback(cb);\r\n    setSelected(SelectedProperty);\r\n    GenerateAVLTree({variables: {comparator: SelectedProperty}});\r\n  }\r\n\r\n  const [GenerateAVLTree] = useLazyQuery(GENERATE_TREE, {fetchPolicy: \"cache-and-network\", \r\n    onCompleted: (GenerateAVLTreeQueryData) => {\r\n      setLoading(false);\r\n      \r\n      setTimeout(() => {\r\n        setAVLTreeData(() => ([GenerateAVLTreeQueryData.GenerateAVLTree]));\r\n        Callback && Callback();\r\n        setCallback(null);\r\n        PushNotification({type: \"Success\", title: \"Generated Tree\", body: \"Please Check Logs\", timeout: 4500});\r\n      }, 500)\r\n    }, onError: () => {\r\n        setTimeout(() => {\r\n            Callback && Callback();\r\n            PushNotification({title: \"Failed To Generate Tree\", \r\n                body: \"Please Try Again Another Time\", timeout: 4500});\r\n        }, 500);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <>\r\n    <SecondaryModal \r\n      HeaderTitle=\"Choose Property To Compare\" CloseCallback={CloseCallback}\r\n      LeftTitle=\"Cancel\" \r\n      RightTitle=\"Choose\"\r\n      LeftAction={(cb) => cb()}\r\n      RightAction={Choose}\r\n    >\r\n      <div className=\"PropertyRadioButtonGroup\">\r\n        {\r\n          Properties.map((Property, p) => \r\n            <CheckBox key={p} radio=\"BookProperties\" label={Property.displayName} \r\n              defaultChecked={Property.title === SelectedProperty} onChange={() => setSelectedProperty(Property.title)}\r\n            />\r\n          )\r\n        }\r\n      </div>\r\n    </SecondaryModal>\r\n    {ShowSpinner && <Spinner Loading={Loading} CloseCallback={setShowSpinner}/>}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ChoosePropertyModal;\r\n","import React from \"react\";\r\nimport { gql, useMutation } from \"@apollo/client\";\r\nimport { UseBookDataContext, UseBookFunctionContext } from \"../../Context/BookContext\";\r\nimport { UseNotificationContext } from \"../../GlobalComponents/Notification/NotificationContext\";\r\n\r\nimport PrimaryButton from \"../../GlobalComponents/PrimaryButton\";\r\nimport ScrollableText from \"../../GlobalComponents/ScrollableText\";\r\n\r\nconst DELETE_BOOK = gql`\r\n  mutation DeleteBook($id: Int!) {DeleteBook(id: $id)}\r\n`;\r\n\r\nfunction BookTable({setSelectedBook}) {\r\n  const Books = UseBookDataContext();\r\n  const setBooks = UseBookFunctionContext();\r\n  const PushNotification = UseNotificationContext();\r\n  \r\n  const [DeleteBook] = useMutation(DELETE_BOOK, {errorPolicy: \"all\",  \r\n    onCompleted: (DeleteBookMutationData) => {\r\n        if(DeleteBookMutationData.DeleteBook >= 0) setBooks(\"DELETE_BOOK\", DeleteBookMutationData.DeleteBook);\r\n        setTimeout(() => {\r\n            PushNotification({type: \"Success\", title: `Book Deleted`, timeout: 4500});\r\n        }, 500);\r\n    }, onError: () => {\r\n        setTimeout(() => {\r\n            PushNotification({title: \"Failed To Delete Book\", \r\n                body: \"Please Try Again Another Time\", timeout: 4500});\r\n        }, 500);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div className=\"BookTable\">\r\n        {Books.length > 0 &&\r\n          <div style={{overflow: \"auto\", maxHeight: \"45vh\"}}>\r\n            <table>\r\n              <thead>\r\n                <tr>\r\n                  <th>ISBN</th>\r\n                  <th>Title</th>\r\n                  <th>Author</th>\r\n                  <th></th>\r\n                </tr>\r\n              </thead>\r\n\r\n              <tbody>\r\n                {\r\n                  Books.map((Book, b) => \r\n                    <tr key={b}>\r\n                      <td className=\"BookProperty\">\r\n                        <ScrollableText>{Book.ISBN}</ScrollableText>\r\n                      </td>\r\n                      <td className=\"BookProperty\">\r\n                        <ScrollableText style={{maxWidth: \"15rem\"}}>{Book.title}</ScrollableText>\r\n                      </td>\r\n                      <td className=\"BookProperty\">\r\n                        <ScrollableText style={{maxWidth: \"10rem\"}}>{Book.author}</ScrollableText>\r\n                      </td>\r\n                      <td className=\"BookActionButtonGroup\">\r\n                        <button onClick={() => setSelectedBook(Book)}>Edit</button>\r\n                        <button onClick={() => DeleteBook({variables: {id: Book.id}})}>Delete</button>\r\n                      </td>\r\n                    </tr>\r\n                  )\r\n                }\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        }\r\n\r\n        <PrimaryButton style={!Books.length ? {marginTop: \"0\"} : null} onClick={() => setSelectedBook({})}>Create New Book</PrimaryButton>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default BookTable;\r\n","import React from \"react\";\r\n\r\nimport \"./TextInput.scss\";\r\n\r\nfunction TextInput({value, label, onChange, size = 40, fontSize}) {\r\n  return (\r\n    <label className=\"TextInput\">\r\n      {label && <span className=\"InputLabel\" style={{fontSize}}>{label}</span>}\r\n      <input className=\"Input\" type=\"text\" style={{height: `${size}px`}} value={value} onChange={onChange}/>\r\n    </label>\r\n  )\r\n}\r\n\r\nexport default TextInput;\r\n","import React from \"react\";\r\nimport { gql, useMutation } from \"@apollo/client\";\r\nimport { UseNotificationContext } from \"../../GlobalComponents/Notification/NotificationContext\";\r\n\r\nimport SecondaryModal from \"../../GlobalComponents/SecondaryModal\";\r\nimport TextInput from \"../../GlobalComponents/TextInput\";\r\nimport { UseBookFunctionContext } from \"../../Context/BookContext\";\r\n\r\nconst UPDATE_BOOK = gql`\r\n  mutation UpdateBook($id: Int!, $ISBN: String!, $title: String!, $author: String!) {\r\n    UpdateBook(id: $id, ISBN: $ISBN, title: $title, author: $author) {\r\n      id ISBN title author\r\n    }\r\n  }\r\n`;\r\nconst CREATE_BOOK = gql`\r\n  mutation CreateBook($ISBN: String!, $title: String!, $author: String!) {\r\n    CreateBook(ISBN: $ISBN, title: $title, author: $author) {\r\n      id ISBN title author\r\n    }\r\n  }\r\n`;\r\n\r\nfunction EditBookModal({Book, CloseCallback}) {\r\n  const [Callback, setCallback] = React.useState(() => 0);\r\n  const [ISBN, setISBN] = React.useState(Book?.ISBN || \"\");\r\n  const [Title, setTitle] = React.useState(Book?.title || \"\");\r\n  const [Author, setAuthor] = React.useState(Book?.author || \"\");\r\n  const setBooks = UseBookFunctionContext();\r\n  const PushNotification = UseNotificationContext();\r\n\r\n  const Save = (cb) => {\r\n    if(!ISBN.trim() || !Title.trim() || !Author.trim()) {\r\n      PushNotification({title: \"Empty Fields\", body: \"Please Fill out all Field Inputs\", timeout: 4500});\r\n      return;\r\n    }\r\n\r\n    setCallback(cb);\r\n\r\n    if(Book.id)\r\n      UpdateBook({variables: {id: Book.id, ISBN, title: Title, author: Author}});\r\n    else\r\n      CreateBook({variables: {ISBN, title: Title, author: Author}});\r\n  }\r\n\r\n  const [CreateBook] = useMutation(CREATE_BOOK, {errorPolicy: \"all\",  \r\n    onCompleted: (CreateBookData) => {\r\n        setBooks(\"CREATE_BOOK\", CreateBookData.CreateBook);\r\n        Callback && Callback();\r\n        setTimeout(() => {\r\n            PushNotification({type: \"Success\", title: `Book Created`, timeout: 4500});\r\n        }, 500);\r\n        setCallback(null);\r\n    }, onError: () => {\r\n        setTimeout(() => {\r\n            PushNotification({title: \"Failed To Create Book\", body: \"Please Try Again\", timeout: 4500});\r\n        }, 500);\r\n        setCallback(null);\r\n    }\r\n  });\r\n  const [UpdateBook] = useMutation(UPDATE_BOOK, {errorPolicy: \"all\",  \r\n    onCompleted: (UpdateBookData) => {\r\n        setBooks(\"UPDATE_BOOK\", UpdateBookData.UpdateBook);\r\n        Callback && Callback();\r\n        setTimeout(() => {\r\n            PushNotification({type: \"Success\", title: `Book Updated`, timeout: 4500});\r\n        }, 500);\r\n        setCallback(null);\r\n    }, onError: () => {\r\n        setTimeout(() => {\r\n            PushNotification({title: \"Failed To Update Book\", body: \"Please Try Again\", timeout: 4500});\r\n        }, 500);\r\n        setCallback(null);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <SecondaryModal \r\n      HeaderTitle={`${Book?.ISBN ? \"Edit\" : \"Create\"} Book`} CloseCallback={CloseCallback}\r\n      LeftTitle=\"Cancel\" \r\n      RightTitle=\"Save\"\r\n      LeftAction={(cb) => cb()}\r\n      RightAction={Save}\r\n    >\r\n      <div className=\"PropertyInputGroup\">\r\n        <span className=\"InputLabel\">ISBN:</span>\r\n        <TextInput value={ISBN} onChange={(e) => setISBN(e.target.value)}/>\r\n        <span className=\"InputLabel\">Title:</span>\r\n        <TextInput value={Title} onChange={(e) => setTitle(e.target.value)}/>\r\n        <span className=\"InputLabel\">Author:</span>\r\n        <TextInput value={Author} onChange={(e) => setAuthor(e.target.value)}/>\r\n      </div>\r\n    </SecondaryModal>\r\n  );\r\n}\r\n\r\nexport default EditBookModal;\r\n","import React from \"react\";\r\nimport { useLazyQuery, useMutation, gql } from \"@apollo/client\";\r\nimport { UseBookFunctionContext } from \"../../Context/BookContext\";\r\nimport { UseNotificationContext } from \"../../GlobalComponents/Notification/NotificationContext\";\r\n\r\nimport PrimaryModal from \"../../GlobalComponents/PrimaryModal\";\r\nimport PrimaryButton from \"../../GlobalComponents/PrimaryButton\";\r\nimport BookTable from \"./BookTable\";\r\nimport EditBookModal from \"./EditBookModal\";\r\nimport Spinner from \"../../GlobalComponents/Spinner\";\r\n\r\nconst GET_BOOKS = gql`\r\n  query GetBooks {GetBooks {id ISBN title author}}\r\n`;\r\nconst DELETE_ALL_BOOKS = gql`\r\n  mutation DeleteAllBooks {DeleteAllBooks}\r\n`;\r\nconst LOAD_BOOKS_FROM_TEXT = gql`\r\n  mutation LoadBooksFromText($text: String, $append: Boolean!) {\r\n    LoadBooksFromText(text: $text, append: $append)\r\n  }\r\n`;\r\n\r\nfunction BookEditorModal({CloseCallback}) {\r\n  const [Loading, setLoading] = React.useState(true);\r\n  const [ShowSpinner, setShowSpinner] = React.useState(true);\r\n  const [SelectedBook, setSelectedBook] = React.useState(null);\r\n  const setBooks = UseBookFunctionContext();\r\n  const PushNotification = UseNotificationContext();\r\n\r\n  const LoadFromFile = ({target}) => {\r\n    let File = target.files ? target.files[0] : null;\r\n\r\n    if(!window.FileReader) {\r\n      PushNotification({title: \"Can't read file\", body: \"Please Manully Enter Data\", timeout: 4500});\r\n      return;\r\n    } else if(!File) {\r\n      PushNotification({title: \"No File Loaded\", body: \"Please Manully Enter Data\", timeout: 4500});\r\n      return;\r\n    }\r\n\r\n    const Reader = new FileReader();\r\n    Reader.onload = (event) => {\r\n      LoadBooksFromText({variables: {text: event?.target?.result, append: false}})\r\n      target.value = \"\";\r\n    }\r\n    Reader.readAsText(File, 'UTF-8');\r\n  }\r\n\r\n  const [GetBooks] = useLazyQuery(GET_BOOKS, {fetchPolicy: \"cache-and-network\", \r\n    onCompleted: (GetBooksQueryData) => {\r\n      setBooks(\"SET_BOOKS\", GetBooksQueryData.GetBooks);\r\n\r\n      setTimeout(() => {\r\n          setLoading(false);\r\n      }, 500)\r\n    }, onError: () => {\r\n        setTimeout(() => {\r\n            setLoading(false);\r\n            CloseCallback();\r\n            PushNotification({title: \"Failed To Get Books\", \r\n                body: \"Please Try Again Another Time\", timeout: 4500});\r\n        }, 500);\r\n    }\r\n  });\r\n  const [DeleteAllBooks] = useMutation(DELETE_ALL_BOOKS, {errorPolicy: \"all\",  \r\n    onCompleted: () => {\r\n        setBooks(\"DELETE_ALL_BOOKS\");\r\n        setTimeout(() => {\r\n            PushNotification({type: \"Success\", title: `All Books Deleted`, timeout: 4500});\r\n        }, 500);\r\n    }, onError: () => {\r\n        setTimeout(() => {\r\n            PushNotification({title: \"Failed To Delete All Books\", \r\n                body: \"Please Try Again Another Time\", timeout: 4500});\r\n        }, 500);\r\n    }\r\n  });\r\n  const [LoadBooksFromText] = useMutation(LOAD_BOOKS_FROM_TEXT, {errorPolicy: \"all\",  \r\n    onCompleted: () => {\r\n        GetBooks();\r\n        setTimeout(() => {\r\n            PushNotification({type: \"Success\", title: `Books Loaded`, timeout: 4500});\r\n        }, 500);\r\n    }, onError: () => {\r\n        setTimeout(() => {\r\n            PushNotification({title: \"Failed To Load Books\", \r\n                body: \"Please Try Again Another Time\", timeout: 4500});\r\n        }, 500);\r\n    }\r\n  });\r\n  \r\n  React.useEffect(() => GetBooks(), [GetBooks]);\r\n\r\n  return (\r\n    <>\r\n    {!ShowSpinner ?\r\n      <>\r\n        <PrimaryModal \r\n          HeaderTitle=\"Book Editor\" CloseCallback={CloseCallback}\r\n          style={{minWidth: \"45vw\", maxWidth: \"55vw\"}}\r\n          >\r\n          <div className=\"BookListButtonGroup\">\r\n            <PrimaryButton onClick={() => LoadBooksFromText({variables: {append: false}})}>Load Default</PrimaryButton>\r\n            <PrimaryButton>\r\n              <label>Load From File<input type=\"file\" accept=\".txt\" onChange={LoadFromFile}/></label>\r\n            </PrimaryButton>\r\n            <PrimaryButton onClick={() => DeleteAllBooks()}>Delete All</PrimaryButton>\r\n          </div>\r\n\r\n          <BookTable setSelectedBook={setSelectedBook}/>\r\n        </PrimaryModal>\r\n\r\n        {SelectedBook && <EditBookModal Book={SelectedBook} CloseCallback={setSelectedBook}/>}\r\n      </>\r\n      :\r\n      <Spinner Loading={Loading} CloseCallback={setShowSpinner}/>\r\n    }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default BookEditorModal;\r\n","import React from \"react\";\r\n\r\nimport PrimaryModal from \"../PrimaryModal\";\r\n\r\nimport \"./LogModal.scss\";\r\n\r\nfunction LogModal({Logs, CloseCallback}) {\r\n  return (\r\n    <PrimaryModal HeaderTitle=\"Logs\" CloseCallback={CloseCallback}>\r\n      <div className=\"Logs\">\r\n        {Logs?.length ?\r\n          <ul>\r\n            {Logs?.map((Log, l) => <li key={l}>{Log}</li>)}\r\n          </ul>\r\n          :\r\n          <center>No Logs To Display</center>\r\n        }\r\n\r\n      </div>\r\n    </PrimaryModal>\r\n  );\r\n}\r\n\r\nexport default LogModal;\r\n","import React from \"react\";\r\nimport {useLazyQuery, gql } from \"@apollo/client\";\r\nimport { UseBinaryTreeDataContext, UseBinaryTreeFunctionContext } from \"../../Context/BinaryTreeContext\";\r\nimport { UseNotificationContext } from \"../../GlobalComponents/Notification/NotificationContext\";\r\n\r\nimport LogModal from \"../../GlobalComponents/LogModal\";\r\nimport Spinner from \"../../GlobalComponents/Spinner\";\r\n\r\nconst GET_LOGS = gql`\r\n  query GetAVLTreeLogs {GetAVLTreeLogs}\r\n`;\r\n\r\nfunction AVLTreeLogModal({CloseCallback}) {\r\n  const [Loading, setLoading] = React.useState(true);\r\n  const [ShowSpinner, setShowSpinner] = React.useState(true);\r\n  const {AVLTreeLogs} = UseBinaryTreeDataContext();\r\n  const {setAVLTreeLogs} = UseBinaryTreeFunctionContext();\r\n  const PushNotification = UseNotificationContext();\r\n\r\n  const [GetTreeLogs] = useLazyQuery(GET_LOGS, {fetchPolicy: \"cache-and-network\", \r\n    onCompleted: (GetTreeLogsQueryData) => {\r\n      console.log(GetTreeLogsQueryData.GetAVLTreeLogs)\r\n      setTimeout(() => {\r\n        setLoading(false);\r\n        setAVLTreeLogs(GetTreeLogsQueryData.GetAVLTreeLogs);\r\n      }, 500);\r\n    }, onError: () => {\r\n      setTimeout(() => {\r\n        CloseCallback();\r\n        PushNotification({title: \"Failed To Get Logs\", \r\n            body: \"Please Try Again Another Time\", timeout: 4500});\r\n      }, 500);\r\n    }\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    GetTreeLogs();\r\n  }, [GetTreeLogs]);\r\n\r\n  return (\r\n    <>\r\n      {!ShowSpinner ? \r\n        <LogModal Logs={AVLTreeLogs} CloseCallback={CloseCallback}/> :\r\n        <Spinner Loading={Loading} CloseCallback={setShowSpinner}/>\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AVLTreeLogModal;\r\n","import React from \"react\";\r\nimport { BookProvider } from \"../../Context/BookContext\";\r\nimport { UseBinaryTreeDataContext } from \"../../Context/BinaryTreeContext\";\r\n\r\nimport DisplayPanel from \"../../GlobalComponents/DisplayPanel\";\r\nimport BinaryTree from \"../../GlobalComponents/BinaryTree\";\r\nimport AVLTreeNode from \"./AVLTreeNode\";\r\nimport ChoosePropertyModal from \"./ChoosePropertyModal\";\r\nimport BookEditorModal from \"./BookEditorModal\";\r\nimport AVLTreeLogModal from \"./AVLTreeLogModal\";\r\n\r\nimport \"./AVLTreePanel.scss\";\r\n\r\nfunction AVLTreePanel() {\r\n  const [ShowPropertyModal, setShowPropertyModal] = React.useState(false);\r\n  const [ShowBookEditor, setShowBookEditor] = React.useState(false);\r\n  const [ShowLogModal, setShowLogModal] = React.useState(false);\r\n  const [SelectedProperty, setSelectedProperty] = React.useState(\"ISBN\");\r\n  const Buttons = React.useRef([\r\n    {text: \"Edit Books\", action: () => setShowBookEditor(true)},\r\n    {text: \"Generate AVL Tree\", action: () => setShowPropertyModal(true)},\r\n    {text: \"View Logs\", action: () => setShowLogModal(true)}\r\n  ]);\r\n  const {AVLTreeData} = UseBinaryTreeDataContext();\r\n\r\n  return (\r\n    <>\r\n      <DisplayPanel Buttons={Buttons.current}>\r\n        <BinaryTree key={AVLTreeData} DisplayText=\"Please Generate An AVL Tree\" TreeData={AVLTreeData} TreeNode={AVLTreeNode} keyProperty={SelectedProperty}/>\r\n      </DisplayPanel>\r\n\r\n      {ShowPropertyModal && <ChoosePropertyModal CloseCallback={setShowPropertyModal} setSelected={setSelectedProperty}/>}\r\n      <BookProvider>\r\n        {ShowBookEditor && <BookEditorModal CloseCallback={setShowBookEditor}/>}\r\n      </BookProvider>\r\n      {ShowLogModal && <AVLTreeLogModal CloseCallback={setShowLogModal}/>}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AVLTreePanel;\r\n","import React from \"react\";\r\n\r\nfunction BinaryTreeNode({nodeData}) {\r\n  React.useEffect(() => {\r\n    if(nodeData && !nodeData.name) {\r\n      let Edge = document.querySelector(`[data-target-id*=\"${nodeData.id}\"]`);\r\n\r\n      Edge && Edge.classList.add(\"EmptyTreeNode\");\r\n    } else return;\r\n  });\r\n\r\n  return (\r\n    <div className={`TreeNode BinaryTreeNode ${!nodeData?.name ? \"EmptyTreeNode\" : \"\"}`}>\r\n      <span><span>{nodeData?.name}</span></span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BinaryTreeNode;\r\n","import React from 'react';\r\n\r\nfunction DownArrow({size = 16, color, strokeColor, className, style, onClick}) {\r\n  return (\r\n    <svg width={size} className={className} style={style} viewBox=\"0 0 16 11\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" onClick={onClick}>\r\n      <path d=\"M5.97163 9.66887C6.40428 10.1978 7.17314 10.5 8 10.5C8.82686 10.5 9.59572 10.1978 10.0284 9.66887L15.1893 3.35897C15.6136 2.84015 15.5787 2.28394 15.2338 1.821C14.8715 1.33452 14.1382 0.932836 13.1609 0.932836H2.83908C1.86176 0.932836 1.12854 1.33452 0.766171 1.821C0.421343 2.28394 0.386374 2.84016 0.810715 3.35897L5.97163 9.66887Z\" fill={color} stroke={strokeColor}/>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default function Arrows({size, color, offset = \"0.525rem\", className, TopAction, BottomAction}) {\r\n  return (\r\n    <span className={className}>\r\n      <DownArrow className=\"Arrow\" style={{transform: \"scale(-1)\", top: offset}}\r\n        size={size} color={color} onClick={TopAction}\r\n      />\r\n      <DownArrow className=\"Arrow\" style={{bottom: offset}}\r\n        size={size} color={color} onClick={BottomAction}\r\n      />\r\n    </span>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport Arrows from \"../Icons/Arrows\";\r\n\r\nimport \"./NumberInput.scss\";\r\n\r\nfunction NumberInput({label, value, min, max, step, onChange, size = 40, width = \"40%\", fontSize}) {\r\n  return (\r\n    <label className=\"NumberInput\">\r\n      {label && <span className=\"InputLabel\" style={{fontSize}}>{label}</span>}\r\n      <span style={{position: \"relative\", width}}>\r\n        <input className=\"Input\" type=\"number\" style={{height: `${size}px`}} value={value} \r\n          min={min || 0} max={max || 10} step={step || 1} onChange={onChange}/>\r\n        <Arrows className=\"Arrows\"/>\r\n      </span>\r\n    </label>\r\n  )\r\n}\r\n\r\nexport default NumberInput;\r\n","import React from \"react\";\r\nimport {useLazyQuery, gql } from \"@apollo/client\";\r\nimport { UseBinaryTreeFunctionContext } from \"../../Context/BinaryTreeContext\";\r\nimport { UseNotificationContext } from \"../../GlobalComponents/Notification/NotificationContext\";\r\n\r\nimport NumberInput from \"../../GlobalComponents/NumberInput\";\r\nimport SecondaryModal from \"../../GlobalComponents/SecondaryModal\";\r\nimport Spinner from \"../../GlobalComponents/Spinner\";\r\n\r\nconst GENERATE_TREE = gql`\r\n  fragment fields on BinaryTreeDisplay {name}\r\n\r\n  fragment recursiveFields on BinaryTreeDisplay {\r\n    children {\r\n      ...fields\r\n      children {\r\n        ...fields\r\n        children {\r\n          ...fields \r\n          children {\r\n          ...fields\r\n            children {...fields}\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  query GenerateBinaryTree($nodes: Int!) {\r\n    GenerateBinaryTree(nodes: $nodes) {\r\n      ...fields ...recursiveFields \r\n    }\r\n  }\r\n`;\r\n\r\nfunction ChooseNodeModal({CloseCallback}) {\r\n  const [Loading, setLoading] = React.useState(false);\r\n  const [ShowSpinner, setShowSpinner] = React.useState(false);\r\n  const [Callback, setCallback] = React.useState(() => 0);\r\n  const [Nodes, setNodes] = React.useState(1);\r\n  const {setBinaryTreeData} = UseBinaryTreeFunctionContext();\r\n  const PushNotification = UseNotificationContext();\r\n\r\n  const Choose = (cb) => {\r\n    setLoading(true);\r\n    setCallback(cb)\r\n    GenerateBinaryTree({variables: {nodes: Nodes}});\r\n  }\r\n\r\n  const [GenerateBinaryTree] = useLazyQuery(GENERATE_TREE, {fetchPolicy: \"cache-and-network\", \r\n    onCompleted: (GenerateBinaryTreeQueryData) => {\r\n      setLoading(false);\r\n      \r\n      setTimeout(() => {\r\n        setBinaryTreeData(() => ([GenerateBinaryTreeQueryData.GenerateBinaryTree]));\r\n        Callback && Callback();\r\n        setCallback(null);\r\n        PushNotification({type: \"Success\", title: \"Generated Tree\", body: \"Please Check Logs\", timeout: 4500});\r\n      }, 500)\r\n    }, onError: () => {\r\n        setTimeout(() => {\r\n            Callback && Callback();\r\n            PushNotification({title: \"Failed To Generate Tree\", \r\n                body: \"Please Try Again Another Time\", timeout: 4500});\r\n        }, 500);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <>\r\n    <SecondaryModal \r\n      HeaderTitle=\"Choose Number of Nodes\" CloseCallback={CloseCallback}\r\n      LeftTitle=\"Cancel\" \r\n      RightTitle=\"Choose\"\r\n      LeftAction={(cb) => cb()}\r\n      RightAction={Choose}\r\n    >\r\n      <NumberInput label=\"Nodes:\" value={Nodes} max={100} onChange={(e) => setNodes(e.target.value)}/>\r\n    </SecondaryModal>\r\n    {ShowSpinner && <Spinner Loading={Loading} CloseCallback={setShowSpinner}/>}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ChooseNodeModal;\r\n","import React from \"react\";\r\nimport {useLazyQuery, gql } from \"@apollo/client\";\r\nimport { UseBinaryTreeDataContext, UseBinaryTreeFunctionContext } from \"../../Context/BinaryTreeContext\";\r\nimport { UseNotificationContext } from \"../../GlobalComponents/Notification/NotificationContext\";\r\n\r\nimport LogModal from \"../../GlobalComponents/LogModal\";\r\nimport Spinner from \"../../GlobalComponents/Spinner\";\r\n\r\nconst GET_LOGS = gql`\r\n  query GetBinaryTreeLogs {GetBinaryTreeLogs}\r\n`;\r\n\r\nfunction BinaryLogModal({CloseCallback}) {\r\n  const [Loading, setLoading] = React.useState(true);\r\n  const [ShowSpinner, setShowSpinner] = React.useState(true);\r\n  const {BinaryTreeLogs} = UseBinaryTreeDataContext();\r\n  const {setBinaryTreeLogs} = UseBinaryTreeFunctionContext();\r\n  const PushNotification = UseNotificationContext();\r\n\r\n  const [GetTreeLogs] = useLazyQuery(GET_LOGS, {fetchPolicy: \"cache-and-network\", \r\n    onCompleted: (GetTreeLogsQueryData) => {\r\n      setBinaryTreeLogs(() => (GetTreeLogsQueryData.GetBinaryTreeLogs));\r\n      setLoading(false);\r\n    }, onError: () => {\r\n      setTimeout(() => {\r\n        CloseCallback();\r\n        PushNotification({title: \"Failed To Get Logs\", \r\n            body: \"Please Try Again Another Time\", timeout: 4500});\r\n      }, 500);\r\n    }\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    GetTreeLogs();\r\n  }, [GetTreeLogs]);\r\n\r\n  return (\r\n    <>\r\n      {!ShowSpinner ? \r\n        <LogModal Logs={BinaryTreeLogs} CloseCallback={CloseCallback}/> :\r\n        <Spinner Loading={Loading} CloseCallback={setShowSpinner}/>\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default BinaryLogModal;\r\n","import React from \"react\";\r\nimport { UseBinaryTreeDataContext } from \"../../Context/BinaryTreeContext\";\r\n\r\nimport DisplayPanel from \"../../GlobalComponents/DisplayPanel\";\r\nimport BinaryTree from \"../../GlobalComponents/BinaryTree\";\r\nimport BinaryTreeNode from \"./BinaryTreeNode\";\r\nimport ChooseNodeModal from \"./ChooseNodeModal\";\r\nimport BinaryLogModal from \"./BinaryTreeLogModal\";\r\n\r\nimport \"./BinaryTreePanel.scss\";\r\n\r\nfunction BinaryTreePanel() {\r\n  const [ShowNodeModal, setShowNodeModal] = React.useState(false);\r\n  const [ShowLogModal, setShowLogModal] = React.useState(false);\r\n  const Buttons = React.useRef([\r\n    {text: \"Generate Binary Tree\", action: () => setShowNodeModal(true)},\r\n    {text: \"View Logs\", action: () => setShowLogModal(true)}\r\n  ]);\r\n  const {BinaryTreeData} = UseBinaryTreeDataContext();\r\n\r\n  return (\r\n    <>\r\n      <DisplayPanel Buttons={Buttons.current}>\r\n        <BinaryTree key={BinaryTreeData} DisplayText=\"Please Generate A Binary Tree\" TreeData={BinaryTreeData} TreeNode={BinaryTreeNode}/>\r\n      </DisplayPanel>\r\n\r\n      {ShowNodeModal && <ChooseNodeModal CloseCallback={setShowNodeModal}/>}\r\n      {ShowLogModal && <BinaryLogModal CloseCallback={setShowLogModal}/>}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default BinaryTreePanel;\r\n","import React from \"react\";\nimport { NotificationProvider } from \"./GlobalComponents/Notification/NotificationContext\";\nimport { BinaryTreeProvider } from \"./Context/BinaryTreeContext\";\n\nimport AVLTreePanel from \"./Components/AVLTreePanel\";\nimport BinaryTreePanel from \"./Components/BinaryTreePanel\";\n\nimport \"./App.scss\";\n\nfunction App() {\n  const [Active, setActive] = React.useState(0);\n\n  return (\n    <div className=\"App\">\n      <nav>\n        <li className={Active === 0 ? \"ActiveLink\" : null} onClick={() => setActive(0)} style={{marginRight: \"30px\"}}>\n          <span>Book AVL Tree</span>\n        </li>\n        <li className={Active !== 0 ? \"ActiveLink\" : null} onClick={() => setActive(1)}>\n          <span>Binary Tree Generator</span>\n        </li>\n      </nav>\n\n      <NotificationProvider>\n        <BinaryTreeProvider>\n          {Active === 0 ? <AVLTreePanel/> : <BinaryTreePanel/>}\n        </BinaryTreeProvider>\n      </NotificationProvider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {ApolloClient, InMemoryCache, ApolloProvider} from \"@apollo/client\";\n\nimport App from \"./App\";\n\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst URI = window.location.protocol.indexOf('https') === 0 ? \"http://avl-tree-project.herokuapp.com/graphql\" : \"http://localhost:8080/graphql\";\n\nconst Client = new ApolloClient({uri: URI, cache: new InMemoryCache()});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={Client}>\n      <App/>\n    </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}